{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","CorrectValue","value","Number","correctTime","time","split","min","sec","useState","breakLength","setBreak","sessionLength","setSession","timer","updateTimer","intervalId","setIntervalId","isPaused","togglePausePlay","inSession","toggleSession","audioRef","useRef","useEffect","minute","prev","play","state","current","minutesLeft","secondsLeft","splice","newTimer","join","className","style","fontWeight","fontStyle","textAlign","id","disabled","onClick","title","newLength","clearInterval","intervalid","setInterval","isPreviouslyPaused","currentTime","pause","ref","preload","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92c7d70.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n\n  const CorrectValue = (value) => {\n    if(Number(value) < 10) {\n      return `0${Number(value)}`\n    }\n    return value;\n  }\n\n  const correctTime = (time) => {\n    let [min, sec] = time.split(':');\n    return `${CorrectValue(min)}:${CorrectValue(sec)}`\n  } \n\n  const initialSessionCount = 25;\n  const initialBreakCount = 5;\n  const [breakLength, setBreak] = useState(initialBreakCount);\n  const [sessionLength, setSession] = useState(initialSessionCount);\n  const [timer, updateTimer] = useState(correctTime(`${initialSessionCount}:00`));\n  const [intervalId, setIntervalId] = useState();\n  const [isPaused, togglePausePlay] = useState(true);\n  const [inSession, toggleSession] = useState(true);\n  const audioRef = useRef();\n  \n\n  const handleReset = ()=>{\n    audioRef.current.currentTime=0;\n    audioRef.current.pause();\n    setBreak(initialBreakCount);\n    setSession(initialSessionCount);\n    updateTimer(correctTime(`${initialSessionCount}:00`));\n    clearInterval(intervalId);\n    togglePausePlay(true);\n    toggleSession(true);\n  }\n\n  useEffect(()=>{\n    if(inSession){\n      updateTimer( correctTime(`${sessionLength}:00`));\n    }else{\n      updateTimer(correctTime(`${breakLength}:00`));\n    }\n  }, [inSession])\n\n  useEffect(()=> {\n    let minute = timer.split(\":\");\n    if(Number(minute[0]) === 0 && Number(minute[1]) === 0){       \n      toggleSession(prev => !prev);             \n    }\n  }, [timer])\n\n  \n  \n\n  const play = ()=>{\n    updateTimer(state => {\n      let minute = state.split(\":\");\n    \n      if(Number(minute[0]) === 1 && Number(minute[1]) === 0){\n        audioRef.current.play();\n      }\n      if(Number(minute[0]) > 0 && Number(minute[1]) === 0){     \n        let minutesLeft = minute[0]-1;\n        let secondsLeft = Number(minute[1])+60;\n        minute.splice(0, 1, minutesLeft)\n        minute.splice(1,1, secondsLeft)\n      }\n      if(Number(minute[1]) <=60 && Number(minute[1]) > 0){\n          let secondsLeft = Number(minute[1])-1;\n          minute.splice(1,1,secondsLeft);\n      }\n      \n      let newTimer = minute.join(':')\n\n      return correctTime(newTimer);\n      }\n    )\n  }\n\n  const pause = ()=>{\n    clearInterval(intervalId)\n  }\n  \n  const incrementBreakLength = ()=>{\n    if(breakLength >=1 && breakLength < 60){\n      setBreak(breakLength+1);\n    }\n  }\n  const decrementBreakLength = ()=>{\n    if(breakLength >1 && breakLength <= 60){\n      setBreak(breakLength-1);\n    }\n  }\n\n  const incrementSessionLength = ()=>{\n    if(sessionLength >=1 && sessionLength < 60){\n      setSession(state=> {\n        let newLength = state+1;\n        updateTimer(correctTime(`${newLength}:00`));\n        return newLength;\n      });\n    }  \n  }\n  const decrementSessionLength = ()=> {\n    if(sessionLength >1 && sessionLength <= 60){\n      setSession(state=> {\n        let newLength = state-1;\n        updateTimer(correctTime(`${newLength}:00`));\n        return newLength;\n      });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1\n        style={{\n          fontWeight: 500,\n          fontStyle: \"italic\",\n          textAlign: \"center\"\n        }}\n      >\n        Pomodoro Clock\n      </h1>\n      <div className=\"break-session-wrapper\">\n        <div className=\"length-box\">\n          <p id=\"break-label\">Break Length</p>\n          <div className=\"inc-dec-wrapper\">\n            <button disabled={!isPaused} onClick={incrementBreakLength}>\n              <i id=\"break-increment\" className=\"fas fa-arrow-alt-circle-up\" title=\"Increase\" ></i>\n            </button>\n            <div id=\"break-length\">{breakLength}</div>\n            <button disabled={!isPaused} onClick={decrementBreakLength}>\n              <i id=\"break-decrement\" className=\"fas fa-arrow-alt-circle-down\" title=\"Decrease\"></i>\n            </button>\n            \n          </div>\n        </div>\n        <div className=\"length-box\">\n          <p id=\"session-label\">Session Length</p>\n          <div className=\"inc-dec-wrapper\">\n            <button disabled={!isPaused} onClick={incrementSessionLength}>\n             <i id=\"session-increment\" className=\"fas fa-arrow-alt-circle-up\" title=\"Increase\"></i>\n            </button>\n            <div id=\"session-length\">{sessionLength}</div>\n            <button  disabled={!isPaused} onClick={decrementSessionLength}>\n              <i id=\"session-decrement\" className=\"fas fa-arrow-alt-circle-down\" title=\"Decrease\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div id=\"time-box\">\n      <p id=\"timer-label\">{inSession ? 'Session': 'Break'}</p>\n      <div id=\"time-left\">{timer}</div>\n      </div>\n      <div id=\"time-setter-box\">\n        <button id=\"start_stop\" onClick={()=>{\n          const isPausedNow = !isPaused;\n          if(!isPausedNow){\n            const intervalid = setInterval(play, 1000)\n            setIntervalId(intervalid)\n          } else{\n            pause();\n          }\n          togglePausePlay(isPreviouslyPaused => !isPreviouslyPaused);\n        }\n          \n        }>\n          {isPaused ? <i className=\"fas fa-play-circle\" title=\"Play\"></i> :<i className=\"fas fa-pause-circle\" title=\"Pause\"></i>}\n        </button>\n        <button id=\"reset\" onClick={handleReset}><i className=\"fas fa-redo-alt\" title=\"Refresh\"></i></button>\n        \n      </div>\n      <div>\n        <audio id=\"beep\" ref={audioRef} preload=\"auto\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}